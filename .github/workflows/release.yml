name: Release

on:
  release:
    types: [released]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Prepare
      id: prep
      shell: pwsh
      run: |
        $DOCKER_IMAGE="ghcr.io/attilavlacsil/net8sample-webapi"
        $RELEASE_TAG="${{ github.event.release.tag_name }}"
        
        $match = [regex]::Match($RELEASE_TAG, "^v(?<Version>[0-9]+\.[0-9]+\.[0-9]+)$")
        if ($match.Success) {
          $VERSION=$match.Groups["Version"].Value
        }
        else {
          throw "Invalid release tag: $RELEASE_TAG"
        }
        
        if ("${{ github.event.action }}" -eq "released") {
          $TAGS="$DOCKER_IMAGE`:$VERSION,$DOCKER_IMAGE`:latest"
        }
        else {
          $TAGS="$DOCKER_IMAGE`:$VERSION-rc,$DOCKER_IMAGE`:rc"
        }
        
        echo "version=$VERSION" >> $env:GITHUB_OUTPUT
        echo "tags=$TAGS" >> $env:GITHUB_OUTPUT
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        file: Net8SampleWebApi/Dockerfile
        push: true
        build-args: |
          BUILD_VERSION=${{ steps.prep.outputs.version }}
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ github.event.release.published_at }}
          org.opencontainers.image.revision=${{ github.sha }}
